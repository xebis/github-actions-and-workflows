---
name: Sync Files

on:
  push:

jobs:
  sync:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository:
          - .github
    steps:
      - name: Create GitHub App token
        uses: actions/create-github-app-token@v2
        id: gh-app-token
        with:
          app-id: ${{ vars.GH_APP_SEM_REL_ID }}
          private-key: ${{ secrets.GH_APP_SEM_REL_PEM_FILE }}
          owner: ${{ github.ref == 'refs/heads/main' && 'xebis' || 'xebis-test' }}
          repositories: ${{ matrix.repository }}

      - name: Checkout target repository
        uses: actions/checkout@v5
        with:
          repository: ${{ format('{0}/{1}', github.ref == 'refs/heads/main' && 'xebis' || 'xebis-test', matrix.repository) }}
          path: target
          token: ${{ steps.gh-app-token.outputs.token }}

      - name: Decide whether to sync files
        id: decide
        run: |
          if [ -f target/.github/sync.yaml ]; then
            echo "sync=true" >> $GITHUB_OUTPUT
          else
            echo "sync=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout source repository
        if: steps.decide.outputs.sync == 'true'
        uses: actions/checkout@v5
        with:
          path: source

      - name: Copy files
        if: steps.decide.outputs.sync == 'true'
        run: |
          yq -r '.copy[]' target/.github/sync.yaml | while IFS= read -r file; do
            if [[ "$file" == *:* ]]; then
              IFS=':' read -r source_file destination_file <<< "$file"
            else
              source_file="$file"
              destination_file="$file"
            fi
            source_path="source/$source_file"
            destination_path="target/$destination_file"
            mkdir -p "$(dirname "$destination_path")"
            cp "$source_path" "$destination_path"
          done

      - name: Detect sync updates
        if: steps.decide.outputs.sync == 'true'
        id: updates
        working-directory: target
        run: |
          if output=$(git status --porcelain) && [ -n "$output" ]; then
            echo "updated=true" >> "$GITHUB_OUTPUT"
          else
            echo "updated=false" >> "$GITHUB_OUTPUT"
          fi
      
      - name: Output short commit SHA
        if: steps.decide.outputs.sync == 'true' && steps.updates.outputs.updated == 'true'
        id: sha
        working-directory: target
        run: |
          echo "short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Create Pull Request with applied automatic fixes
        if: steps.decide.outputs.sync == 'true' && steps.updates.outputs.updated == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          path: target
          token: ${{ steps.gh-app-token.outputs.token }}
          branch: "feature/sync-files-for-${{ steps.sha.outputs.short }}"
          commit-message: "chore: [sync-files] sync files"
          title: "[Sync Files] Sync Files"
          labels: bot
